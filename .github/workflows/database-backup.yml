name: Database Backup

on:
  schedule:
    # Ejecutar todos los d√≠as a las 2 AM UTC (9 PM hora de Panam√°)
    - cron: '0 2 * * *'
  workflow_dispatch: # Permite ejecutar manualmente desde GitHub

jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PostgreSQL Client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Create Backup Directory
        run: mkdir -p backups

      - name: Generate Backup
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          # Generar nombre con fecha y hora
          BACKUP_FILE="backups/backup-$(date +%Y%m%d-%H%M%S).sql"
          
          echo "üöÄ Creando backup de base de datos..."
          
          # Hacer backup completo
          pg_dump $DATABASE_URL > $BACKUP_FILE
          
          # Verificar que se cre√≥ correctamente
          if [ -f "$BACKUP_FILE" ]; then
            SIZE=$(du -h "$BACKUP_FILE" | cut -f1)
            echo "‚úÖ Backup creado exitosamente: $BACKUP_FILE ($SIZE)"
          else
            echo "‚ùå Error: No se pudo crear el backup"
            exit 1
          fi
          
          # Comprimir el backup
          echo "üì¶ Comprimiendo backup..."
          gzip $BACKUP_FILE
          
          COMPRESSED_SIZE=$(du -h "${BACKUP_FILE}.gz" | cut -f1)
          echo "‚úÖ Backup comprimido: ${BACKUP_FILE}.gz ($COMPRESSED_SIZE)"

      - name: Upload Backup to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: database-backup-${{ github.run_number }}
          path: backups/*.gz
          retention-days: 30
          compression-level: 0 # Ya est√° comprimido con gzip

      - name: Cleanup old local backups
        run: |
          echo "üßπ Limpiando backups antiguos..."
          find backups/ -name "*.gz" -mtime +7 -delete
          echo "‚úÖ Limpieza completada"

      - name: Send notification (opcional)
        if: success()
        run: |
          echo "‚úÖ Backup completado exitosamente en $(date)"
          echo "üìä Detalles del backup:"
          ls -lh backups/*.gz

      - name: Send failure notification (opcional)
        if: failure()
        run: |
          echo "‚ùå El backup fall√≥ en $(date)"
          echo "‚ö†Ô∏è Revisa los logs para m√°s informaci√≥n"
